---
es:
  tests:
    nil:
      class: Nil
      filename: acerca_de_nil.rb

      nil_is_an_object:
        name: nil_es_un_objeto
        hint: Al contrario de NULL en otros lenguajes

      you_dont_get_null_pointer_errors:
        name: no_obtienes_errores_de_puntero_nulo_al_llamar_métodos_sobre_nil
        hint: |-
          # ¿Qué pasa cuando llamas un método que no existe?
              # El siguiente bloque begin/rescue/end captura la excepción y
              # Hace algunas aserciones sobre ella
        hint_2: ¿Qué excepción ha sido capturada?
        hint_3: |-
          # ¿Qué  mensaje fue señalado en la excepción?
                # (PISTA: reemplaza __ con parte del mensaje de error.)
        some_method_nil_doesnt_know: algun_método_desconocido_para_nil

      nil_has_a_few_methods_defined:
        name: nil_tiene_algunos_métodos_definidos
        hint: |-
          # PIENSA AL RESPECTO:
              #
              # ¿Es mejor usar
              #   obj.nil?
              # ó
              #   obj == nil
              # ?
              # ¿Por qué?

    objects:
      class: Objetos
      filename: acerca_de_objetos.rb

      everything_is_an_object:
        name: todo_es_un_objeto
        string: cadena
      objects_can_be_converted_to_strings:
        name: los_objetos_pueden_ser_convertidos_en_cadenas
      objects_can_be_inspected:
        name: los_objetos_pueden_ser_inspeccionados
      every_object_has_an_id:
        name: cada_objeto_tiene_un_identificador
        object: &object objeto
      every_object_has_different_id:
        name: cada_objeto_tiene_un_identificador_diferente
        object: *object
        another_object: otro_objeto
      small_integers_have_fixed_ids:
        name: los_enteros_pequeños_tienen_identificadores_fijos
        hint: |-
          # PIENSA AL RESPECTO:
              # ¿Qué patrón siguen los identificadores para enteros pequeños?
      clone_creates_a_different_object:
        name: clone_crea_un_objeto_diferente
        object: *object
        copy: copia

    arrays:
      class: Arreglos
      filename: acerca_de_arreglos.rb

      creating_arrays:
        name: creación_de_arreglos
        empty_array: arreglo_vacío
      array_literals:
        name: literales_de_arreglos
        array: &array arreglo
      accessing_array_elements:
        name: acceso_a_elementos_de_un_arreglo
        array: *array
        elements: &elements
          - !ruby/sym cacahuate
          - !ruby/sym mantequilla
          - !ruby/sym y
          - !ruby/sym gelatina
      slicing_arrays:
        name: acceso_a_secciones_de_arreglos
        array: *array
        elements: *elements
      arrays_and_ranges:
        name: arreglos_y_rangos
      slicing_with_ranges:
        name: acceso_a_secciones_de_arreglos_con_rangos
        array: *array
        elements: *elements
      pushing_and_popping_arrays:
        name: inserción_y_extracción_de_elementos_de_un_arreglo
        array: *array
        last: último
        popped_value: valor_extraído
      shifting_arrays:
        name: alteración_de_arreglos
        array: *array
        first: primero
        shifted_value: valor_insertado
