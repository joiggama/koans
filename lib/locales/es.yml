---
es:
  class_prefix: AcercaDe
  test_prefix: prueba

  neo:
    fill_me_in: Relléname
    failed_assertion: Aserción fallida

    assertions:
      failed: Aserción fallida
      expected_to_equal: Se esperaba que %{actual} fuera igual a %{expected}
      expected_to_not_equal: Se esperaba que %{actual fuera diferente de %{expected}
      expected_to_be_nil: Se esperaba que %{actual} fuera nil
      expected_to_not_be_nil: Se esperaba que %{actual} no fuera nil
      expected_to_match: Se esperaba que %{actual} coincidiera con %{pattern}
      expected_to_raise_other: Se esperaba una excepción %{exception}, pero ocurrió %{actual}
      expected_to_raise: Se esperaba una excepción %{exception} pero no ocurrió
      expected_to_not_raise: No se esperaba ninguna excepción, pero se generó %{exception}

    sensei:
      about_losing: Cuando pierdas, no pierdas la lección
      about_mountains: Las montañas son solamente montañas
      about_mountains_again: Las montañas, son nuevamente, solamente montañas
      about_rules: Aprende las reglas para así saber como romperlas apropiadamente
      about_silence: Recuerda que el silencio es a veces la mejor respuesta
      about_sleeping: Dormir es el mejor tipo de meditación
      about_things: "Las cosas no son lo que aparentan: ni tampoco lo contrario"
      about_who: traido a ti por

      the_master_says: El maestro dice
      the_master_supports: No pierdas la esperanza
      the_master_instructs: Por favor medita con respecto al siguiente código

      your_answers: Las respuestas que buscas
      your_awareness: ha aumentado tu conocimiento
      your_enlightenment: Aún no has alcanzado la iluminación
      your_frustration: Percibo frustración. No tengas miedo de pedir ayuda
      your_karma: ha dañado tu karma
      your_path: tu camino hasta este momento
      your_progress: Estás progresando. Excelente. %{progress} completedo

  tests:
    path_to_enlightenment:
      filename: camino_a_la_iluminacion.rb

    asserts:
      class: Aserciones
      filename: acerca_de_aserciones.rb

      assert_truth:
        description: Debemos contemplar la verdad probando la realidad, por medio de aserciones
        name: asercion_de_verdad
        hint: "Esto debería ser verdadero -- Por favor, arréglalo"

      assert_with_message:
        description: La iluminación debería ser más fácilmente alcanzada con los mensajes apropiados
        name: asercion_con_mensaje
        hint: "Esto debería ser verdadero -- Por favor, arréglalo"

      assert_equality:
        description: Para comprender la realidad, debemos comparar nuestras expectativas contra ella
        name: asercion_de_igualdad
        expected_value: valor_esperado
        actual_value: valor_obtenido

      a_better_way_of_asserting_equality:
        description: Algunas maneras de evaluar la realidad son mejores que otras
        name: una_mejor_asercion_de_igualdad
        expected_value: valor_esperado
        actual_value: valor_obtenido

      fill_in_values:
        description: Algunas veces te pediremos rellenar valores
        name: rellenar_valores

    nil:
      class: Nil
      filename: acerca_de_nil.rb

      nil_is_an_object:
        name: nil_es_un_objeto
        hint: Al contrario de NULL en otros lenguajes

      you_dont_get_null_pointer_errors:
        name: no_obtienes_errores_de_puntero_nulo_al_llamar_métodos_sobre_nil
        hint: |-
          # ¿Qué pasa cuando llamas un método que no existe?
              # El siguiente bloque begin/rescue/end captura la excepción y
              # Hace algunas aserciones sobre ella
        hint_2: ¿Qué excepción ha sido capturada?
        hint_3: |-
          # ¿Qué  mensaje fue señalado en la excepción?
                # (PISTA: reemplaza __ con parte del mensaje de error.)
        some_method_nil_doesnt_know: algun_método_desconocido_para_nil

      nil_has_a_few_methods_defined:
        name: nil_tiene_algunos_métodos_definidos
        hint: |-
          # PIENSA AL RESPECTO:
              #
              # ¿Es mejor usar
              #   obj.nil?
              # ó
              #   obj == nil
              # ?
              # ¿Por qué?
